name: Deploy ActivityPub Api Gateway and Lambda
on:
  workflow_dispatch:
    inputs:
      deploy_lambda:
        description: Deploy Lambda Function
        type: boolean
        default: true
      deploy_gateway:
        description: Reimport API Gateway
        type: boolean
        default: false

jobs:
  configure:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      AWS_ACTIVITYPUB_FUNCTION_NAME: ${{ secrets.INSTANCE_NAME }}-activitypub

    steps:
      - name: check branch is main
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "Branch is not main, exiting."
            exit 1
          fi

      - name: checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
        
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: deploy-gateway-from-github-actions
      
      - name: get caller identity is allowed to run on role.
        run: aws sts get-caller-identity

      - name: Update gateway
        if: ${{ github.event.inputs.deploy_gateway != 'false' }}
        run: |
          cp ./activitypub/api_gateway/api.json ./api.json
          sed -i "s@%INSTANCE_NAME%@${{ secrets.INSTANCE_NAME }}@g" ./api.json
          sed -i "s@%DOMAIN%@${{ secrets.DOMAIN }}@g"               ./api.json
          sed -i "s@%DATE%@`date -u +"%Y-%m-%dT%H:%M:%SZ"`@g"       ./api.json

          sed -i "s@%REGION%@${{ secrets.AWS_REGION }}@g"                       ./api.json
          sed -i "s@%ACCOUNT_ID%@${{ secrets.AWS_ACCOUNT_ID }}@g"               ./api.json
          sed -i "s@%AUTH_FUNCTION%@${{ env.AWS_ACTIVITYPUB_FUNCTION_NAME }}@g" ./api.json
          
          aws apigatewayv2 reimport-api --api-id ${{ secrets.AWS_ACTIVITYPUB_GATEWAY_API_ID }} --body file://api.json >/dev/null

      - name: deploy lambda
        if: ${{ github.event.inputs.deploy_lambda != 'false' }}
        run: |
          cd activitypub/lambda && zip -r package.zip ./*
          aws lambda update-function-code --function-name ${{ env.AWS_ACTIVITYPUB_FUNCTION_NAME }} --zip-file fileb://package.zip --publish >/dev/null
