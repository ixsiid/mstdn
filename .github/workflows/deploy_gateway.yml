name: Deploy API Gateway
on:
  workflow_dispatch:

jobs:
  configure:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    permissions:
      id-token: write
      contents: read

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
        
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: deploy-gateway-from-github-actions
      
      - name: get caller identity is allowed to run on role.
        run: aws sts get-caller-identity

      - name: Update gateway
        run: |
          cp ./api_gateway/api.json ./api.json
          sed -i "s@%REGION%@${{ secrets.AWS_REGION }}@g"             ./api.json
          sed -i "s@%ACCOUNT_ID%@${{ secrets.AWS_ACCOUNT_ID }}@g"     ./api.json
          sed -i "s@%FUNCTION%@${{ env.AWS_LAMBDA_FUNCTION_NAME }}@g" ./api.json
          sed -i "s@%INSTANCE_NAME%@${{ secrets.INSTANCE_NAME }}@g"   ./api.json
          sed -i "s@%DOMAIN%@${{ secrets.DOMAIN }}@g" ./api.json
          node ./api_gateway/convert_aws_api.mjs ./api.json ./aws-api.json
          
          aws apigatewayv2 reimport-api --api-id ${{ secrets.AWS_GATEWAY_API_ID }} --body file://aws-api.json
        env:
          AWS_LAMBDA_FUNCTION_NAME: ${{ secrets.INSTANCE_NAME }}-function