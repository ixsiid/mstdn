name: Deploy Lambda function
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: check branch is main
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "Branch is not main, exiting."
            exit 1
          fi

      - name: checkout
        uses: actions/checkout@v3
        
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: deploy-lambda-function-from-github-actions
      
      - name: get caller identity is allowed to run on role.
        run: aws sts get-caller-identity

      # Mergeまたはリリース時に自動Deployするときに有効化する
      # - name: Check changed
      #   id: changed
      #   uses: dorny/paths-filter@v2
      #   with:
      #     filters: |
      #       module:
      #         - 'lambda/package.json'
      #         - 'lambda/package-lock.json'

      - name: deploy modules
      #   if: steps.changed.outputs.module == 'true'
        run: |
          mkdir ./nodejs
          cp ./lambda/package.json ./nodejs/package.json
          cp ./lambda/package-lock.json ./nodejs/package-lock.json
          cd nodejs
          npm ci
          cd ../
          zip -r nodejs.zip ./nodejs
          aws lambda publish-layer-version --layer-name ${{ env.AWS_LAMBDA_LAYER_NAME }} --zip-file fileb://nodejs.zip > publish-layer-version.json
          aws lambda update-function-configuration --function-name ${{ env.AWS_LAMBDA_FUNCTION_NAME }} --layers "`cat publish-layer-version.json | jq  -r '.LayerVersionArn'`" > update-function-configuration.json
        env:
          AWS_LAMBDA_LAYER_NAME: ${{ secrets.INSTANCE_NAME }}-node-modules
          AWS_LAMBDA_FUNCTION_NAME: ${{ secrets.INSTANCE_NAME }}-lambda

      - name: deploy lambda
        run: |
          cd lambda && zip -r package.zip ./* -x node_modules
          aws lambda update-function-code --function-name ${{ env.AWS_LAMBDA_FUNCTION_NAME }} --zip-file fileb://package.zip --publish >/dev/null
        env:
          AWS_LAMBDA_FUNCTION_NAME: ${{ secrets.INSTANCE_NAME }}-lambda
